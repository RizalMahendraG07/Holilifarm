name: Laravel CI/CD

on:
  push:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none

      - name: Install dependencies
        working-directory: ./src
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy .env
        working-directory: ./src
        run: cp .env.example .env

      - name: Generate app key
        working-directory: ./src
        run: php artisan key:generate

      - name: Run migration
        working-directory: ./src
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel
          DB_USERNAME: laravel
          DB_PASSWORD: secret
        run: php artisan migrate --force

      - name: Run tests
        working-directory: ./src
        run: php artisan test

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
           context: .
           file: ./Dockerfile
           push: true
           tags: |
              ${{ secrets.DOCKER_USERNAME }}/holilifarm-deploy:latest
              ${{ secrets.DOCKER_USERNAME }}/holilifarm-deploy:${{ github.sha }}


  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port: 22
          script: |
            export IMAGE_TAG=${{ github.sha }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/holilifarm-deploy:$IMAGE_TAG
            sed -i "s|image: .*$|image: ${{ secrets.DOCKER_USERNAME }}/holilifarm-deploy:$IMAGE_TAG|" docker-compose.yml
            cd /home/deployer/Holilifarm
            docker compose down
            docker compose up -d
            echo "Waiting for MySQL to be ready..."
            sleep 30
            docker compose exec app php artisan migrate --force
            docker compose exec app php artisan db:seed --class=UserSeeder --force
            docker compose exec app php artisan config:cache
